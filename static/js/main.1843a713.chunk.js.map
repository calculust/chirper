{"version":3,"sources":["images/background.png","theme/globalStyles.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","bgImage","initChirps","key","uuidv4","username","content","date","App","useState","chirps","setChirps","setUsername","chirpContent","setChirpContent","chirpContentPlaceholder","setChirpContentPlaceholder","show","setShow","handleClose","chirpContentRef","useRef","printChirps","map","val","Card","className","Body","Title","toLowerCase","Text","moment","calendar","reverse","useEffect","current","focus","href","Button","variant","onClick","Container","Modal","onHide","Header","id","rows","ref","onChange","e","target","value","placeholder","Footer","type","aria-label","Date","now","ReactDOM","render","document","getElementById"],"mappings":"wOAAe,MAA0B,uCCgD1BA,EA7CKC,YAAH,yzBAeOC,G,OCZlBC,EAAa,CACf,CACIC,IAAKC,cACLC,SAAU,WACVC,QAAQ,0CACRC,KAAM,cAEV,CACIJ,IAAKC,cACLC,SAAU,gBACVC,QAAQ,yBACRC,KAAM,cAEV,CACIJ,IAAKC,cACLC,SAAU,UACVC,QAAQ,0BACRC,KAAM,eA4GCC,EAxGH,WAER,MAA4BC,mBAASP,GAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBO,EAAjB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA8DL,mBAAS,IAAvE,mBAAOM,EAAP,KAAgCC,EAAhC,KACA,EAAwBP,oBAAS,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAE5BE,EAAkBC,iBAAO,MA4BzBC,EAAcZ,EAAOa,KAAI,SAAAC,GAC3B,OACI,cAACC,EAAA,EAAD,CAAoBC,UAAU,iBAA9B,SACI,eAACD,EAAA,EAAKE,KAAN,WACI,eAACF,EAAA,EAAKG,MAAN,eAAcJ,EAAInB,SAASwB,iBAC3B,cAACJ,EAAA,EAAKK,KAAN,UACKN,EAAIlB,UAET,cAACmB,EAAA,EAAKK,KAAN,UACI,uBAAOJ,UAAU,aAAjB,SAA+BK,IAAOP,EAAIjB,MAAMyB,mBAPjDR,EAAIrB,QAYpB8B,UAQH,OANAC,qBAAU,WACFjB,GAAQG,EAAgBe,SACxBf,EAAgBe,QAAQC,UAE7B,CAACnB,IAGA,qCACI,cAAC,EAAD,IACA,qBAAKS,UAAU,sCAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGW,KAAK,IAAIX,UAAU,eAAtB,kCACA,qBAAKA,UAAU,SAAf,SACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1D3B,kBAAMtB,GAAQ,IA0Db,0BAIZ,cAACuB,EAAA,EAAD,UAEI,qBAAKf,UAAU,6BAAf,SACI,qBAAKA,UAAU,WAAf,SACKJ,QAIb,eAACoB,EAAA,EAAD,CAAOzB,KAAMA,EAAM0B,OAAQxB,EAA3B,UACI,cAACuB,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMd,MAAP,kCAEJ,cAACc,EAAA,EAAMf,KAAP,UACI,0BAAUD,UAAU,wBAAwBmB,GAAG,eAAeC,KAAK,IAAIC,IAAK3B,EAAiB4B,SApE5E,SAAAC,GAC7BnC,EAAgBmC,EAAEC,OAAOC,QAmEoHC,YAAarC,EAA9I,SAAwKF,MAE5K,eAAC6B,EAAA,EAAMW,OAAP,CAAc3B,UAAU,0BAAxB,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAMA,UAAU,mBAAmBmB,GAAG,eAAtC,eACA,uBAAOA,GAAG,WAAWM,MAAO9C,EAAUiD,KAAK,OAAO5B,UAAU,eAAe0B,YAAY,WAAWG,aAAW,WAAWP,SA7E/G,SAAAC,GACzBrC,EAAYqC,EAAEC,OAAOC,aA8ET,sBAAKzB,UAAU,SAAf,UACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYb,UAAU,OAAOc,QAASrB,EAAtD,oBAGA,cAACmB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA3E1B,WACZnC,GAA6B,KAAjBQ,GACZK,GAAQ,GACRP,GAAU,SAAAD,GAAM,4BACTA,GADS,CAEZ,CACIP,IAAKC,cACLC,SAAUA,EACVC,QAASO,EACTN,KAAMiD,KAAKC,YAGnB3C,EAAgB,KAEhBE,EAA2B,4EA6Df,gCCnHxB0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1843a713.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.b0c8cb94.png\";","import { createGlobalStyle } from 'styled-components';\nimport bgImage from '../images/background.png';\n \nconst GlobalStyle = createGlobalStyle`\n  body {\n    position:relative;\n    min-height:100vh;\n  }\n\n  // solution to add opacity to bg image\n  body::before {    \n      content: \"\";\n      position: absolute;\n      top: 0px;\n      right: 0px;\n      bottom: 0px;\n      left: 0px;\n      opacity: 0.1;\n      background: url(${bgImage});\n      background-position: 5% 95%;\n      background-size: 300px;\n      background-repeat: no-repeat;\n      background-attachment: fixed;\n}\n\n  textarea:hover, \n  input:hover, \n  textarea:active, \n  input:active, \n  textarea:focus, \n  input:focus,\n  button:focus,\n  button:active,\n  button:hover,\n  label:focus,\n  .btn:active,\n  .btn.active\n  {\n    outline:0px !important;\n    -webkit-appearance:none;\n    box-shadow: none !important;\n  }\n\n  textarea {\n    resize:none;\n  }\n`;\n \nexport default GlobalStyle;","import React, { useState, useEffect, useRef } from 'react'\nimport { Container, Card, Button, Modal } from 'react-bootstrap';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport GlobalStyle from './theme/globalStyles';\n\nconst initChirps = [\n    {\n        key: uuidv4(),\n        username: 'Leonardo',\n        content: `I'm going to order a pizza üçï`,\n        date: 1620274875000\n    },\n    {\n        key: uuidv4(),\n        username: 'Michaelangelo',\n        content: `Cowabunga üê¢`,\n        date: 1620278475000\n    },\n    {\n        key: uuidv4(),\n        username: 'Raphael',\n        content: `Duuuuuude! ü§ò`,\n        date: 1620279615000\n    }\n]\n\nconst App = () => {\n    \n    const [chirps, setChirps] = useState(initChirps);\n    const [username, setUsername] = useState('');\n    const [chirpContent, setChirpContent] = useState('');\n    const [chirpContentPlaceholder, setChirpContentPlaceholder] = useState('');\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const chirpContentRef = useRef(null);\n\n    const handleUsernameChange = e => {\n        setUsername(e.target.value);\n    }\n\n    const handleChirpContentChange = e => {\n        setChirpContent(e.target.value);\n    }\n\n    const handleChirp = () => {\n        if (username && chirpContent !== '') {\n            setShow(false);\n            setChirps(chirps => [\n                ...chirps,\n                {\n                    key: uuidv4(),\n                    username: username,\n                    content: chirpContent,\n                    date: Date.now()\n                }\n            ])\n            setChirpContent('');\n        } else {\n            setChirpContentPlaceholder('Please make sure you have set your username and provided Chrip content.');\n        }\n    }\n\n    const printChirps = chirps.map(val => {\n        return (\n            <Card key={val.key} className=\"rounded-3 mb-3\">\n                <Card.Body>\n                    <Card.Title>@{val.username.toLowerCase()}</Card.Title>\n                    <Card.Text>\n                        {val.content}\n                    </Card.Text>\n                    <Card.Text>\n                        <small className=\"text-muted\">{moment(val.date).calendar()}</small>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }).reverse();\n\n    useEffect(() => {\n        if (show && chirpContentRef.current) {\n            chirpContentRef.current.focus();\n          }\n    }, [show]);\n    \n    return (\n        <>\n            <GlobalStyle />\n            <nav className=\"navbar navbar-dark bg-info p-3 mb-5\">\n                <div className=\"container-fluid\">\n                    <a href=\"#\" className=\"navbar-brand\">üê¶ Chirper</a>\n                    <div className=\"d-flex\">\n                        <Button variant=\"warning\" onClick={handleShow}>Chirp</Button>\n                    </div>\n                </div>\n            </nav>\n            <Container>\n                \n                <div className=\"row justify-content-center\">\n                    <div className=\"col-sm-4\">\n                        {printChirps}\n                    </div>\n                </div>\n            </Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>What's happening?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <textarea className=\"form-control border-0\" id=\"chirpContent\" rows=\"3\" ref={chirpContentRef} onChange={handleChirpContentChange} placeholder={chirpContentPlaceholder}>{chirpContent}</textarea>\n                </Modal.Body>\n                <Modal.Footer className=\"justify-content-between\">\n                    <div className=\"input-group w-50\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">@</span>\n                        <input id=\"username\" value={username} type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" onChange={handleUsernameChange} />\n                    </div>\n                    <div className=\"d-flex\">\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleChirp}>\n                            Chirp\n                        </Button>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}